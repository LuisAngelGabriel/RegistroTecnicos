@page "/Tecnico/Index"
@inject TecnicoService tecnicoService
@inject Blazored.Toast.Services.IToastService toastService
@inject NavigationManager navigationManager
@rendermode InteractiveServer

<PageTitle>Consulta de Técnicos</PageTitle>

<div class="container mt-4">
    <div class="card shadow-sm">
        <div class="card-header bg-white text-center">
            <h5 class="mb-0">Consulta de Técnicos</h5>
        </div>

        <div class="card-body">
            <div class="row align-items-center mb-3">
                <div class="col-md-3">
                    <label class="form-label fw-bold">Filtrar por:</label>
                    <InputSelect class="form-select" @bind-Value="Filtro" @onchange="Ordenar">
                        <option value="TecnicoId">TécnicoID</option>
                        <option value="Nombre">Nombre</option>
                    </InputSelect>
                </div>

                <div class="col-md-5">
                    <label class="form-label fw-bold">Búsqueda:</label>
                    <div class="input-group">
                        <input class="form-control" @bind="ValorFiltro" @oninput="Buscar" placeholder="Buscar por nombre o ID" />
                        <button type="button" class="btn btn-primary" @onclick="Buscar">
                            <i class="bi bi-search me-1"></i> Buscar
                        </button>
                    </div>
                </div>

                <div class="col-md-4 text-end mt-4 mt-md-0">
                    <a href="/Tecnico/Create" class="btn btn-success">
                        <i class="bi bi-plus-circle me-1"></i> Crear
                    </a>
                </div>
            </div>

            <table class="table table-bordered text-center align-middle">
                <thead class="table-light">
                    <tr>
                        <th>TécnicoID</th>
                        <th>Nombres</th>
                        <th>Sueldo por Hora</th>
                        <th>Editar</th>
                        <th>Eliminar</th>
                    </tr>
                </thead>
                <tbody>
                    @if (ListaTecnicos.Count == 0)
                    {
                        <tr>
                            <td colspan="5" class="text-muted">No se encontraron técnicos.</td>
                        </tr>
                    }
                    else
                    {
                        @foreach (var tecnico in ListaTecnicos)
                        {
                            <tr>
                                <td>@tecnico.TecnicoId</td>
                                <td>@tecnico.Nombre</td>
                                <td>@tecnico.SueldoHora.ToString("F2")</td>
                                <td>
                                    <a href="/Tecnico/Edit/@tecnico.TecnicoId" class="btn btn-outline-primary btn-sm">
                                        <i class="bi bi-pencil-square"></i>
                                    </a>
                                </td>
                                <td>
                                    <button class="btn btn-outline-danger btn-sm" @onclick="() => Eliminar(tecnico.TecnicoId)">
                                        <i class="bi bi-trash"></i>
                                    </button>
                                </td>
                            </tr>
                        }
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

@code {
    public List<Tecnicos> ListaTecnicos { get; set; } = new();
    public string Filtro { get; set; } = "TecnicoId";
    public string ValorFiltro { get; set; } = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        await CargarYOrdenar();
    }

    private async Task CargarYOrdenar()
    {
        var lista = await tecnicoService.Listar(t => true);

        if (!string.IsNullOrWhiteSpace(ValorFiltro))
        {
            if (Filtro == "TecnicoId" && int.TryParse(ValorFiltro, out int id))
                lista = lista.Where(t => t.TecnicoId == id).ToList();
            else if (Filtro == "Nombre")
                lista = lista.Where(t => t.Nombre != null && t.Nombre.Contains(ValorFiltro, StringComparison.OrdinalIgnoreCase)).ToList();
        }

        ListaTecnicos = Filtro switch
        {
            "Nombre" => lista.OrderBy(t => t.Nombre).ToList(),
            _ => lista.OrderBy(t => t.TecnicoId).ToList()
        };
    }

    private async Task Buscar()
    {
        await CargarYOrdenar();
    }

    private async Task Ordenar(ChangeEventArgs e)
    {
        Filtro = e.Value?.ToString() ?? "TecnicoId";
        await CargarYOrdenar();
    }

    private async Task Eliminar(int id)
    {
        if (await tecnicoService.Eliminar(id))
        {
            await CargarYOrdenar();
        }
    }
}
}