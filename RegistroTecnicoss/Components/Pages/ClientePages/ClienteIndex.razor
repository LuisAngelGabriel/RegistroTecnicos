@page "/Cliente/Index"
@using RegistroTecnicoss.Models
@inject ClienteService clienteService
@inject NavigationManager navigationManager
@inject IToastService toastService
@rendermode InteractiveServer

<PageTitle>Listado de Clientes</PageTitle>

<h3 class="text-center mb-4">Listado de Clientes</h3>

<div class="container">
    <div class="mb-3 text-end">
        <a class="btn btn-outline-primary" href="/Cliente/Crear">
            <i class="bi bi-plus-circle"></i> Nuevo Cliente
        </a>
    </div>

    @if (Clientes == null)
    {
        <div class="alert alert-info text-center">Cargando clientes...</div>
    }
    else if (Clientes.Count == 0)
    {
        <div class="alert alert-warning text-center">No hay clientes registrados.</div>
    }
    else
    {
        <div class="table-responsive">
            <table class="table table-hover table-bordered shadow-sm">
                <thead class="table-primary text-center">
                    <tr>
                        <th>ID</th>
                        <th>Fecha Ingreso</th>
                        <th>Nombre</th>
                        <th>Dirección</th>
                        <th>RNC</th>
                        <th>Límite Crédito</th>
                        <th>Técnico Encargado</th>
                        <th>Acciones</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var cliente in Clientes)
                    {
                        <tr class="text-center">
                            <td>@cliente.ClienteId</td>
                            <td>@cliente.FechaIngreso.ToShortDateString()</td>
                            <td>@cliente.Nombres</td>
                            <td>@cliente.Direccion</td>
                            <td>@cliente.Rnc</td>
                            <td>@cliente.LimiteCredito.ToString("N2")</td>
                            <td>@cliente.Tecnico?.Nombre</td>
                            <td>
                                <a class="btn btn-sm btn-outline-success me-1" href="/Cliente/Editar/@cliente.ClienteId">
                                    <i class="bi bi-pencil-square"></i>
                                </a>
                                <a class="btn btn-sm btn-outline-danger" href="/Cliente/Eliminar/@cliente.ClienteId">
                                    <i class="bi bi-trash"></i>
                                </a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
</div>

@code {
    private List<Cliente>? Clientes;

    protected override async Task OnInitializedAsync()
    {
        Clientes = await clienteService.ListarTodo();
@page "/Clientes/Index"
@inject ClienteService ClienteService
@inject NavigationManager Navigation

<PageTitle>Consulta de Clientes</PageTitle>

<div class="container mt-4">
    <div class="card shadow-sm">
        <div class="card-header bg-white text-center">
            <h5 class="mb-0">Consulta de Clientes</h5>
        </div>

        <div class="card-body">
            <div class="row align-items-center mb-3">
                <div class="col-md-3">
                    <label class="form-label fw-bold">Filtrar por:</label>
                    <InputSelect class="form-select" @bind-Value="Filtro" @onchange="Ordenar">
                        <option value="ClienteId">Cliente Id</option>
                        <option value="Nombres">Nombres</option>
                    </InputSelect>
                </div>

                <div class="col-md-5">
                    <label class="form-label fw-bold">Búsqueda:</label>
                    <div class="input-group">
                        <input class="form-control" @bind="ValorFiltro" @oninput="Buscar" placeholder="Buscar..." />
                        <button type="button" class="btn btn-primary" @onclick="Buscar">
                            <i class="bi bi-search me-1"></i> Buscar
                        </button>
                    </div>
                </div>

                <div class="col-md-4 text-end mt-4 mt-md-0">
                    <a href="/Cliente/Crear" class="btn btn-success">
                        <i class="bi bi-plus-circle me-1"></i> Crear
                    </a>
                </div>
            </div>

            <table class="table table-bordered text-center align-middle">
                <thead class="table-light">
                    <tr>
                        <th>Cliente Id</th>
                        <th>Nombres</th>
                        <th>Dirección</th>
                        <th>RNC</th>
                        <th>Límite de Crédito</th>
                        <th>Técnico encargado</th>
                        <th>Fecha de Ingreso</th>
                        <th>Editar</th>
                    </tr>
                </thead>
                <tbody>
                    @if (ListaClientes.Count == 0)
                    {
                        <tr>
                            <td colspan="8" class="text-muted">No se encontraron clientes.</td>
                        </tr>
                    }
                    else
                    {
                        @foreach (var cliente in ListaClientes)
                        {
                            <tr>
                                <td>@cliente.ClienteId</td>
                                <td>@cliente.Nombres</td>
                                <td>@cliente.Direccion</td>
                                <td>@cliente.Rnc</td>
                                <td>@cliente.LimiteCredito.ToString("F2")</td>
                                <td>@cliente.Tecnico?.Nombre</td>
                                <td>@cliente.FechaIngreso.ToShortDateString()</td>
                                <td>
                                    <a href="/Cliente/Editar/@cliente.ClienteId" class="btn btn-outline-primary btn-sm">
                                        <i class="bi bi-pencil-square"></i>
                                    </a>


                                </td>
                            </tr>
                        }
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

@code {
    public List<Clientes> ListaClientes { get; set; } = new();
    public string Filtro { get; set; } = "ClienteId";
    public string ValorFiltro { get; set; } = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        await CargarYOrdenar();
    }

    private async Task CargarYOrdenar()
    {
        var lista = await ClienteService.Listar(c => true);

        if (!string.IsNullOrWhiteSpace(ValorFiltro))
        {
            if (Filtro == "ClienteId" && int.TryParse(ValorFiltro, out int id))
                lista = lista.Where(c => c.ClienteId == id).ToList();
            else if (Filtro == "Nombres")
                lista = lista.Where(c => !string.IsNullOrEmpty(c.Nombres) && c.Nombres.Contains(ValorFiltro, StringComparison.OrdinalIgnoreCase)).ToList();
        }

        ListaClientes = Filtro switch
        {
            "Nombres" => lista.OrderBy(c => c.Nombres).ToList(),
            _ => lista.OrderBy(c => c.ClienteId).ToList()
        };
    }

    private async Task Buscar()
    {
        await CargarYOrdenar();
    }

    private async Task Ordenar(ChangeEventArgs e)
    {
        Filtro = e.Value?.ToString() ?? "ClienteId";
        await CargarYOrdenar();
    }
}
